@model Eng360Web.Models.ViewModel.EmployeeViewModel



@{
    Layout = null;
}
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />




<style>
    .table-condensed tbody > tr > td > a {
        color: #4eb1ba !important;
    }



    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>




<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Edit Employee </b>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { role = "form", id = "employeeEditForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UserID)
                    @Html.HiddenFor(model => model.AddressID)
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => model.CreatedDate)
                    @Html.HiddenFor(model => model.CreatedBy)
                    @Html.HiddenFor(model => model.eng_address_master.AddressID)



                    <div id="tabsEmployee">
                        <ul>
                            <li><a href="#tabs-1">Personal Information</a></li>
                            <li><a href="#tabs-4">Contact Information</a></li>
                        </ul>
                        <div id="tabs-1">
                            <div class="row">




                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label" }) @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                    <div>
                                        @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })



                                    </div>
                                </div>





                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })



                                    </div>
                                </div>




                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })



                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })



                                    </div>
                                </div>




                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.DoB, htmlAttributes: new { @class = "control-label" })
                                    <div class="inner-addon right-addon">
                                        @if (Model.DoB == null)
                                        {
                                            @Html.EditorFor(model => model.DoB, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.DoB, new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToDateTime(Model.DoB).ToString("dd/MM/yyyy") } })
                                        }
                                        <i class="glyphicon glyphicon-calendar"></i>
                                        @Html.ValidationMessageFor(model => model.DoB, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
                                        {
                                      
                                       new SelectListItem{Text="Male", Value="Male"},
                                        new SelectListItem{Text="Female", Value="Female"}}, "-Select-", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Designation, "Designation", htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })



                                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                    </div>
                                </div>








                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.DoJ, htmlAttributes: new { @class = "control-label required" })
                                    <div class="inner-addon right-addon">
                                        @if (Model.DoJ == null)
                                        {
                                            @Html.EditorFor(model => model.DoJ, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.DoJ, new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToDateTime(Model.DoJ).ToString("dd/MM/yyyy") } })
                                        }




                                        <i class="glyphicon glyphicon-calendar"></i>
                                        @Html.ValidationMessageFor(model => model.DoJ, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.GroupID, "Job Group", htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.DropDownList("GroupID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })



                                    </div>
                                </div>


                            </div>
                            <div class="row">

                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.ReportManager, "Report Manager", htmlAttributes: new { @class = "control-label " })
                                    @Html.ValidationMessageFor(model => model.ReportManager, "", new { @class = "text-danger" })
                                    <div>
                                        @Html.DropDownList("ReportManager", null, htmlAttributes: new { @class = "form-control" })



                                    </div>
                                </div>

                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Email, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Mobile, htmlAttributes: new { @class = "control-label required" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Mobile, "", new { @class = "text-danger" })
                                    </div>
                                </div>







                            </div>
                           
                        </div>


                        <div id="tabs-4">
                            <div class="row">




                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Tel, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Tel, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Tel, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Web, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Web, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Web, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Address1, htmlAttributes: new { @class = "control-label " })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Address1, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">




                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Address2, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Address2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.City, htmlAttributes: new { @class = "control-label " })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Country, htmlAttributes: new { @class = "control-label " })
                                    <div>
                                        @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Country, "", new { @class = "text-danger" })





                                    </div>
                                </div>
                            </div>
                            <div class="row">




                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Postal_Code, htmlAttributes: new { @class = "control-label " })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Postal_Code, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Postal_Code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Passport_Number, htmlAttributes: new { @class = "control-label " })
                                    <div>
                                        @Html.EditorFor(model => model.Passport_Number, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Passport_Number, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Passport_Valid_Till, htmlAttributes: new { @class = "control-label " })
                                    <div class="inner-addon right-addon">
                                        @Html.EditorFor(model => model.Passport_Valid_Till, new { htmlAttributes = new { @class = "form-control" } })
                                        <i class="glyphicon glyphicon-calendar"></i>
                                        @Html.ValidationMessageFor(model => model.Passport_Valid_Till, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Fax1, "Fax", htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Fax1, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Fax1, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.SkypeID, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.SkypeID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.SkypeID, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.eng_address_master.Remarks, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.eng_address_master.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.eng_address_master.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="modal-footer">
                        <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>



                        <button type="button" id="create-employee-dialog-Edit" class="btn btn-primary">Save</button>



                    </div>
                }
            </div>
        </div>
    </div>
</div>




<script>
    $(function () {
        $("#tabsEmployee").tabs();



        $('#DoB').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#DoJ').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#DoR').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#Passport_Valid_Till').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#Permit_Valid_From').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#Permit_Valid_To').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#Licence_Valid_Till').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#Insurance_Valid_Till').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#SOC_Issue_Date').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#SOC_Expiry_Date').datetimepicker({ format: 'DD/MM/YYYY' });



        $('#License_Scissor_Lift_ExpiryDate').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#License_Boom_Lift_ExpiryDate').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#License_WorkatHeight_ExpiryDate').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#License_IslandPass_ExpiryDate').datetimepicker({ format: 'DD/MM/YYYY' });



        $('#License_Course_Expiry_Date').datetimepicker({ format: 'DD/MM/YYYY' });



    });
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");




</script>