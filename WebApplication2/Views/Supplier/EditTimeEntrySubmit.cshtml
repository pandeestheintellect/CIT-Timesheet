@model Eng360Web.Models.ViewModel.TimeEntrySubmitViewModel

@{
    Layout = null;
}


<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />



<style>
    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<div class="row inner-page--container">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Details of Time Entry ID - @Model.TimeEntryCode  </b>


                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>*@
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">



                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "timeEntrySubmitEditForm"  }))
                {
                @Html.AntiForgeryToken()

                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.TimeEntryId)
                    @Html.HiddenFor(model => model.TimeEntryCode)
                    @Html.HiddenFor(model => model.Status)
                    @Html.HiddenFor(model => model.SubmittedDate)
                    @Html.HiddenFor(model => model.SubmittedBy)



                    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3)
                    {
                    @Html.HiddenFor(model => model.ApprovalRemarks)
                    @Html.HiddenFor(model => model.RejectedRemarks)
                    @Html.HiddenFor(model => model.ApprovedDate)
                    }



                    <div class="col-md-6">
                        @Html.LabelFor(model => model.SubmittedDate, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @{
                            var dt = "";
                            dt = Convert.ToDateTime(@Model.SubmittedDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());

                            }

                            @Html.Editor("Test", new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @Value = @dt } })


                        </div>
                    </div>


                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ProjectName, "Project Name", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status != 1)
                            {
                            @Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control" })
                            }
                            else
                            {
                            @Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control", @disabled="disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="col-md-6">
                        @Html.LabelFor(model => model.EmployeeName, "UserID", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status != 1)
                            {
                            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                            }
                            else
                            {
                            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control", @disabled="disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(model => model.WorkStartTime, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status != 1)
                            {
                            @Html.EditorFor(model => model.WorkStartTime, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            {
                            @Html.EditorFor(model => model.WorkStartTime, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
                            }
                            @Html.ValidationMessageFor(model => model.WorkStartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(model => model.WorkEndTime, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status != 1)
                            {
                            @Html.EditorFor(model => model.WorkEndTime, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            {
                            @Html.EditorFor(model => model.WorkEndTime, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
                            }
                            @Html.ValidationMessageFor(model => model.WorkStartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Leave, "Leave Type", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status != 1)
                            {
                            @Html.DropDownList("LeaveID", null, htmlAttributes: new { @class = "form-control" })
                            }
                            else
                            {
                            @Html.DropDownList("LeaveID", null, htmlAttributes: new { @class = "form-control", @disabled="disabled" })
                            }
                            @Html.ValidationMessageFor(model => model.Leave, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 2)
                    {
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Status, "Approve/Reject", htmlAttributes: new { @class = "control-label required" })
                        <div>
                            @if (Model.Status == 0 || Model.Status == 2)
                            {
                            @Html.DropDownListFor(model => model.ClaimStatus, new SelectList(new List<Object>
                                {

                                new { value = 1 , text = "Approved" },
                                new { value = 2 , text = "Rejected" }

                                }, "value", "text", 1), htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                @Html.DropDownListFor(model => model.Status, new SelectList(new List<Object>
                                    {

                                    new { value = 1 , text = "Approved" },
                                    new { value = 2 , text = "Rejected" }

                                    }, "value", "text", 1), htmlAttributes: new { @class = "form-control", @disabled="disabled" })
                                    }
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    }

                        </div>
                    </div>

                    }








                    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 2)
                    {
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ApprovalRemarks, "Manager Remarks", htmlAttributes: new { @class = "control-label required" })
                        <div>
                            @if(Model.Status==0 || Model.Status==2){
                            @Html.EditorFor(model => model.ApprovalRemarks, new { htmlAttributes = new { @class = "form-control"} })
                            }
                            else
                            {
                            @Html.EditorFor(model => model.ApprovalRemarks, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
                            }
                            @Html.ValidationMessageFor(model => model.ApprovalRemarks, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    }


                    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status == 1)
                    {
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ApprovalRemarks, "Manager Remarks", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.ApprovalRemarks, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                        </div>
                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ApprovedDate, "Approved Date", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.ApprovedDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                        </div>
                    </div>

                    }



                    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3 && Model.Status == 2)
                    {
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ApprovalRemarks, "Manager Remarks", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.RejectRemarks, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                        </div>
                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ApprovedDate, "Rejected Date", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.ApprovedDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                        </div>
                    </div>

                    }



                </div>
                <div class="modal-footer">
                    @if (Model.Status != 1)
                    {
                    if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3)
                    {
                    <button type="button" id="create-claimEdit-dialog-save" style="float:right" class="btn btn-primary">Save</button>
                    }
                    if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 2)
                    {


                    <button type="button" id="create-timeEntryApprove-dialog-save" style="float:right" class="btn btn-primary">Save</button>

                    }

                    <span style="float:right">&nbsp;</span>
                    <input type="button" value="Back" id="create-claim1-dialog1-back1" style="float:right" class="btn btn-primary SubTime" />
                    }

                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $(function () {

        $('#SubmittedDate').datetimepicker({ format: 'DD/MM/YYYY', defaultDate: new Date() });

        $('#WorkStartTime').datetimepicker({ format: 'HH:mm' });
        $('#WorkEndTime').datetimepicker({
            format: 'HH:mm',
            useCurrent: false //Important! See issue #1075
        });
    });
    
    
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");


</script>

