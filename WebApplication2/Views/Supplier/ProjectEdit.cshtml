@model Eng360Web.Models.ViewModel.ProjectNewViewModel

@{
    Layout = null;
}
<style>
    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Edit Project  </b>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="modal-body">
                    @using (Html.BeginForm("ProjectEdit", "Supplier", FormMethod.Post, new { role = "form", id = "ProjectnewForm" }))
                    {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ProjectCode)
                    @Html.HiddenFor(model => model.ProjectId)
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => model.CreatedDate)
                    @Html.HiddenFor(model => model.CreatedBy)


                    <div class="row">

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control"})
                                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })

                            </div>
                        </div>



                        <div class="col-md-6">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label required" })
                            <div class="inner-addon right-addon">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                                <i class="glyphicon glyphicon-calendar"></i>

                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label required" })
                            <div class="inner-addon right-addon">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                                <i class="glyphicon glyphicon-calendar"></i>

                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control", @onchange = "onclientChange(this)" })
                                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })

                            </div>
                        </div>





                    </div>

                    <div class="modal-footer">
                        <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>

                        <button type="button" id="create-project-dialog-Edit" class="btn btn-primary">Save</button>

                    </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {

        $('#StartDate').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#EndDate').datetimepicker({ format: 'DD/MM/YYYY' });


    });

    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");
</script>
