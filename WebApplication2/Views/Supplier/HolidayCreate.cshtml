@model Eng360Web.Models.ViewModel.HolidayMasterViewModel

@{
    Layout = null;
}

<style>
    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />


<div class="row inner-page--container">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Add New Holiday</b>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="modal-body" style="padding:20px">
                    @using (Html.BeginForm("HolidayCreate", "Supplier",FormMethod.Post, new { role = "form", id = "holidayForm" }))
                    {
                    @Html.AntiForgeryToken()



                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="row">

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Description,htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label required" })
                            <div  class="inner-addon right-addon">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                <i class="glyphicon glyphicon-calendar"></i>

                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>




                    </div>
                        <div class="row">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label " })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                <div>
                                    @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control", @onchange = "onclientChange(this)" })

                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>

                            <button type="button" id="create-holiday-dialog-save" class="btn btn-primary">Create</button>


                        </div>




                        }
                    </div>
            </div>
        </div>
    </div>
</div>
    <script>
        $(function () {
            // $("#TermsAndCond").html("TERMS & CONDITIONS : \n PRICE: All in Singapore dollars \n VALIDITY: Two Month from dated this quotation \n DELIVERY    : One week from upon order confirmation \n NOTE: Any others work NOT mentioned here will be additional charged.");

            $('#Date').datetimepicker({ format: 'DD/MM/YYYY' });


            //$('#ValidTill').datetimepicker({
            //    format: 'MM/DD/YYYY',
            //    useCurrent: false //Important! See issue #1075
            //});
            //$("#QuoteDate").on("dp.change", function (e) {
            //    $('#ValidTill').data("DateTimePicker").minDate(e.date);
            //});

            //$("#ValidTill").on("dp.change", function (e) {
            //    $('#QuoteDate').data("DateTimePicker").maxDate(e.date);
            //});
        });

        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
    </script>
